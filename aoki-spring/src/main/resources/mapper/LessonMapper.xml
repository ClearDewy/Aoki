<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cleardewy.aoki.mapper.LessonMapper">
    <insert id="addLesson" parameterType="LessonDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO lesson(`name`,`introduction`,`ownerId`,`teamMode`,`topicMode`,`avatarURL`) values(#{name},#{introduction},#{ownerId},#{teamMode},#{topicMode},#{avatarURL})
    </insert>

    <update id="updateLesson" parameterType="EditLessonVo">
        UPDATE lesson SET `name`=#{name},`introduction`=#{introduction},`avatarURL`=#{avatarURL}
        WHERE id=#{id}
    </update>

    <delete id="deleteLesson" parameterType="Integer">
        DELETE FROM lesson WHERE id=#{id}
    </delete>

    <select id="getLessonList" parameterType="Integer" resultType="LessonListVo">
        SELECT lesson.id as id,lesson.name as name,lesson.avatarURL as avatarURL,(
            SELECT user.name
            FROM user
            WHERE user.id = lesson.ownerId
        ) AS ownerName
        FROM lessonMember
                 JOIN lesson ON lesson.id = lessonMember.lessonId
                 JOIN user ON user.id = lesson.ownerId
        WHERE lessonMember.memberId = #{id}
    </select>

    <select id="getLesson" parameterType="Integer" resultType="LessonDto">
        SELECT * FROM `lesson` WHERE id=#{id}
    </select>

    <select id="getLessonByTopic" parameterType="Integer" resultType="LessonDto">
        SELECT lesson.id, lesson.name, introduction, lesson.ownerId, teamMode, topicMode, avatarURL FROM lesson,topic WHERE topic.id=#{topicId} AND topic.lessonId=lesson.id
    </select>

    <select id="verifyLessonOwner" resultType="Integer" parameterType="Integer">
        SELECT count(*) FROM `lesson` WHERE ownerId=#{ownerId} and id=#{id}
    </select>


    <insert id="addLessonMember" parameterType="LessonMemberDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO lessonmember(`lessonId`,`memberId`) values(#{lessonId},#{memberId})
    </insert>
    <insert id="addLessonMembers">
        INSERT INTO lessonmember(`lessonId`,`memberId`) values
        <foreach collection="idList" item="item" open="(" separator="),(" close=")">
            #{lessonId},#{item}
        </foreach>
    </insert>
    <select id="verifyLessonMember" resultType="Integer" parameterType="Integer">
        SELECT count(*) FROM `lessonmember` WHERE memberId=#{memberId} and lessonId=#{lessonId}
    </select>
    <select id="getLessonMember" parameterType="Integer" resultType="UserListVo">
        SELECT u.id,u.username,u.name, u.email,m.majorName as major,u.role
        FROM lessonMember lm
                 LEFT JOIN user u ON lm.memberId = u.id
                 LEFT JOIN major m ON u.majorId = m.id
        WHERE lm.lessonId = #{id};
    </select>

    <delete id="deleteLessonMembers">
        delete from lessonmember where lessonId=#{lessonId} AND memberId=#{id}
    </delete>
    
    <insert id="addTopicTime" parameterType="TopicTimeDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO topictime(`beginTime`,`endTime`,`lessonId`) VALUES(#{beginTime},#{endTime},#{lessonId})
    </insert>
    <update id="updateTopicTime" parameterType="TopicTimeDto">
        UPDATE topictime SET `beginTime`=#{beginTime},
                             `endTime`=#{endTime}
        WHERE `lessonId`=#{lessonId}
    </update>
    <select id="getTopicTime" parameterType="Integer" resultType="TopicTimeVo">
        SELECT COALESCE(DATE_FORMAT(beginTime, '%Y-%m-%d %H:%i:%s'),''), COALESCE(DATE_FORMAT(endTime, '%Y-%m-%d %H:%i:%s'),'') FROM topictime WHERE `lessonId`=#{lessonId}
    </select>
    
    <insert id="createTopic" parameterType="TopicDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO topic(`name`,`limit`,`difficult`,`ownerId`,`lessonId`) VALUES (#{name},#{limit},#{difficult},#{ownerId},#{lessonId})
    </insert>
    <select id="getTopics" resultType="TopicListVo">
        SELECT topic.id, topic.name, `number`, topic.limit, topic.difficult, user.name AS ownerName
        FROM topic
                 JOIN user ON topic.ownerId = user.id
        WHERE topic.lessonId = #{lessonId}
    </select>

    <select id="getMyTopic" resultType="TopicListVo">
        SELECT topic.id, topic.name, `number`, topic.limit, topic.difficult, user.name AS ownerName
        FROM topic
                 JOIN user ON topic.ownerId = user.id
                JOIN topicmember ON topic.id = topicmember.topicId
        WHERE topic.lessonId = #{lessonId} AND topicmember.memberId=#{id}
    </select>
    <select id="getMyTopics" resultType="TopicListVo">
        SELECT topic.id, topic.name, `number`, topic.limit, topic.difficult, user.name AS ownerName
        FROM topic
                 JOIN user ON topic.ownerId = user.id
        WHERE topic.lessonId = #{lessonId} AND topic.ownerId=#{id}
    </select>

    <update id="updateTopic" parameterType="TopicDto">
        UPDATE topic SET `name`=#{name},
                         `limit`=#{limit},
                         `difficult`=#{difficult}
        WHERE `id` =#{id}
    </update>
    <delete id="deleteTopic">
        DELETE FROM topic WHERE `id`=#{id}
    </delete>

    <select id="verifyTopicOwner" resultType="Integer">
        SELECT count(*) FROM topic WHERE `id`=#{topicId} AND `ownerId`=#{id}
    </select>

    <select id="getTopicLesson" resultType="LessonDto">
        SELECT lesson.id,lesson.name,lesson.introduction,lesson.ownerId,teamMode,topicMode,avatarURL from topic,lesson WHERE topic.id=#{id} AND lesson.id=topic.lessonId
    </select>


    <insert id="addTopicMember" parameterType="TopicMemberDto"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO topicmember(`topicId`, `memberId`) VALUES (#{topicId},#{memberId})
    </insert>
    <delete id="removeTopicMember" parameterType="TopicMemberDto">
        DELETE FROM topicmember WHERE `topicId`=#{topicId} AND `memberId`=#{memberId}
    </delete>

    <select id="verifyNoTopic" parameterType="Integer" resultType="integer">
        SELECT count(*) FROM topicmember
        INNER JOIN topic ON topicmember.topicId = topic.id
        WHERE topic.lessonId=#{lessonId} AND memberId=#{memberId}
    </select>

    <select id="getTopicMembers" parameterType="Integer" resultType="TeamMemberVo">
        SELECT user.id,user.username,user.name,user.avatarURL
        FROM topicmember,user
        WHERE `topicId`=#{topicId} AND `memberId`=user.id
    </select>

    <select id="getNoTopicMembers" parameterType="Integer" resultType="NoTopicMemberList">
        SELECT user.id, user.name
        FROM user
                 JOIN lessonmember ON user.id = lessonmember.memberId AND lessonmember.lessonId = #{lessonId}
                 LEFT JOIN topicmember ON user.id = topicmember.memberId
                 LEFT JOIN topic ON topicmember.topicId = topic.id AND topic.lessonId = #{lessonId}
        WHERE topicmember.memberId IS NULL
    </select>

    <select id="getLessonByTaskId" resultType="LessonDto" parameterType="Integer">
        SELECT lesson.id, lesson.name, introduction, lesson.ownerId, teamMode, topicMode, avatarURL FROM lesson
        INNER JOIN topic ON lesson.id = topic.lessonId
        INNER JOIN task ON topic.id = task.topicId
        WHERE task.id=#{taskId}
    </select>
</mapper>

